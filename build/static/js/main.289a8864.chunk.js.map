{"version":3,"sources":["_actions/types.tsx","_actions/user_action.tsx","_components/InfomationPage.tsx","_components/EmptyPage.tsx","_components/LandingPage.tsx","_components/LoginPage.tsx","_components/RegisterPage.tsx","hoc/auth.tsx","_components/App.tsx","reportWebVitals.ts","_reducers/index.tsx","_reducers/user_reducer.tsx","index.tsx"],"names":["LOGIN_USER","REGISTER_USER","OVERLAP_CHECK_EMAIL","AUTH_USER","LOGOUT_USER","dataToSubmit","a","request","axios","post","then","response","data","type","payload","get","InformationPage","props","info","userInfo","useState","Boolean","email","name","sex","school","grade","option","EmptyPage","withRouter","component","dispatch","useDispatch","HomePageComponent","SetHomePageComponent","className","href","onClick","undefined","isAuth","event","preventDefault","logoutUser","logoutSuccess","history","push","alert","id","Email","setEmail","Password","setPassword","style","display","justifyContent","alignItems","width","height","onSubmit","loginUser","password","loginSuccess","flexDirection","onChange","currentTarget","value","ConfirmPassword","setConfirmPassword","Name","setName","Sex","setSex","School","setSchool","Grade","setGrade","Option","setOption","IsEmailOverlapChecked","setIsEmailOverlapChecked","handleChangeSex","handleChangeGrade","handleChangeOption","handleSubmit","registerUser","registerSuccess","maxLength","title","placeholder","readOnly","regEmail","overlapCheckEmail","test","defaultChecked","disabled","Auth","SpecificComponent","Payload","SetPayload","useEffect","authUser","App","exact","path","LandingPage","LoginPage","RegisterPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","user","state","action","userData","defaults","withCredentials","store","createStore","Reducer","composeWithDevTools","applyMiddleware","promiseMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.289a8864.chunk.js","sourcesContent":["export const LOGIN_USER = 'LOGIN_USER'\r\nexport const REGISTER_USER = 'REGISTER_USER'\r\nexport const OVERLAP_CHECK_EMAIL = 'OVERLAP_CHECK_EMAIL'\r\nexport const AUTH_USER = 'AUTH_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n","import axios from 'axios'\r\nimport { LOGIN_USER, REGISTER_USER, OVERLAP_CHECK_EMAIL, AUTH_USER, LOGOUT_USER } from './types'\r\n\r\nexport async function loginUser (dataToSubmit) {\r\n  const request = axios.post('/api/user/login', dataToSubmit).then((response) => response.data)\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request\r\n  }\r\n}\r\n\r\nexport async function registerUser (dataToSubmit: {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    sex: string;\r\n    school: string;\r\n    grade: string;\r\n    option: string;\r\n}) {\r\n  const request = axios.post('/api/user/register', dataToSubmit).then((response) => response.data)\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request\r\n  }\r\n}\r\n\r\nexport async function overlapCheckEmail (dataToSubmit) {\r\n  const request = axios.post('/api/user/overlapCheckEmail', dataToSubmit).then((response) => response.data)\r\n  return {\r\n    type: OVERLAP_CHECK_EMAIL,\r\n    payload: request\r\n  }\r\n}\r\n\r\nexport async function authUser () {\r\n  const request = axios.get('/api/user/auth').then((response) => response.data)\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request\r\n  }\r\n}\r\n\r\nexport async function logoutUser () {\r\n  const request = axios.get('/api/user/logout').then((response) => response.data)\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: request\r\n  }\r\n}\r\n","// eslint-disable-next-line no-use-before-define\r\nimport React, { SetStateAction, useState } from 'react'\r\n\r\nfunction InformationPage (props: any) {\r\n  const info = props.userInfo\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [PasswordChangeToggle, SetPasswordChangeToggle]:[boolean, React.Dispatch<SetStateAction<boolean>>] = useState(Boolean(false))\r\n\r\n  return (\r\n    <div>\r\n        <div>이메일: {info.email}</div>\r\n        <div>이름: {info.name}</div>\r\n        <div>성별: {info.sex}</div>\r\n        <div>학교: {info.school}</div>\r\n        <div>학년: {info.grade}</div>\r\n        <div>탐구: {info.option}</div>\r\n        <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InformationPage\r\n","function EmptyPage () {\r\n  return (\r\n    // eslint-disable-next-line react/react-in-jsx-scope\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default EmptyPage\r\n","import { withRouter } from 'react-router-dom'\r\n// eslint-disable-next-line no-use-before-define\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logoutUser } from '../_actions/user_action'\r\nimport InformationPage from './InfomationPage'\r\nimport EmptyPage from './EmptyPage'\r\n\r\nfunction LandingPage (props: any) {\r\n  const dispatch = useDispatch()\r\n  const [HomePageComponent, SetHomePageComponent] = useState(EmptyPage)\r\n\r\n  const handleHomePage = (component) => {\r\n    return (event: React.MouseEvent) => {\r\n      SetHomePageComponent(component)\r\n      event.preventDefault()\r\n    }\r\n  }\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser()).then(async (response) => {\r\n      if ((await response.payload).logoutSuccess) {\r\n        props.history.push('/')\r\n      } else {\r\n        alert('로그아웃 하는데 실패했습니다')\r\n      }\r\n    })\r\n    SetHomePageComponent(EmptyPage)\r\n  }\r\n\r\n  return (\r\n            <div>\r\n                <div className=\"nav\">\r\n                    <div className=\"title\">\r\n                        공짱닷컴\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <div className=\"menu_content\">\r\n                        <div className=\"nav-item\"><a href=\"/\" onClick={(props.payload !== undefined ? props.payload.isAuth : false) ? handleHomePage(<InformationPage userInfo={props.payload}/>) : undefined}>내 정보</a></div>\r\n                        <div className=\"nav-item\">다이어리</div>\r\n                        <div className=\"nav-item\">커뮤니티</div>\r\n                        <div className=\"login-wrap\">\r\n                            <a className=\"nav-item\" href={(props.payload !== undefined ? !props.payload.isAuth : false) ? 'login' : '/'} onClick={(props.payload !== undefined ? props.payload.isAuth : false) ? handleLogout : undefined} >{(props.payload !== undefined ? props.payload.isAuth : false) ? '로그아웃' : '로그인'}</a>\r\n                            <a className=\"nav-item\" href=\"register\">회원가입</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <main id=\"container\">\r\n                    {HomePageComponent}\r\n                </main>\r\n            </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(LandingPage)\r\n","// eslint-disable-next-line no-use-before-define\r\nimport React, { useState } from 'react'\r\nimport './Stylesheet.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser } from '../_actions/user_action'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nfunction LoginPage (props: any) {\r\n  const dispatch = useDispatch()\r\n  const [Email, setEmail] = useState('')\r\n  const [Password, setPassword] = useState('')\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const body = {\r\n      email: Email,\r\n      password: Password\r\n    }\r\n    dispatch(loginUser(body)).then(async (response) => {\r\n      if ((await response.payload).loginSuccess) {\r\n        alert('로그인 성공')\r\n        props.history.push('/')\r\n      } else {\r\n        alert('이메일이나 비밀번호가 올바르지 않습니다')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n      height: '100vh'\r\n    }} onSubmit={handleSubmit}>\r\n      <form style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <label>ID</label>\r\n        <input type=\"email\" name=\"email\" onChange={handleChangeEmail} />\r\n        <label>PASSWORD</label>\r\n        <input type=\"password\" name=\"password\" onChange={handleChangePassword} />\r\n        <br />\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(LoginPage)\r\n","import './Register.css'\r\n// eslint-disable-next-line no-use-before-define\r\nimport React, { SetStateAction, useState } from 'react'\r\nimport { registerUser, overlapCheckEmail } from '../_actions/user_action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nfunction RegisterPage (props: any) {\r\n  const dispatch = useDispatch()\r\n\r\n  const [Email, setEmail]:[string, React.Dispatch<SetStateAction<string>>] = useState('')\r\n  const [Password, setPassword]:[string, React.Dispatch<SetStateAction<string>>] = useState('')\r\n  const [ConfirmPassword, setConfirmPassword]:[string, React.Dispatch<SetStateAction<string>>] = useState('')\r\n  const [Name, setName]:[string, React.Dispatch<SetStateAction<string>>] = useState('')\r\n  const [Sex, setSex]:[string, React.Dispatch<SetStateAction<string>>] = useState('남자')\r\n  const [School, setSchool]:[string, React.Dispatch<SetStateAction<string>>] = useState('')\r\n  const [Grade, setGrade]:[string, React.Dispatch<SetStateAction<string>>] = useState('1')\r\n  const [Option, setOption]:[string, React.Dispatch<SetStateAction<string>>] = useState('자연')\r\n  const [IsEmailOverlapChecked, setIsEmailOverlapChecked]:[boolean, React.Dispatch<SetStateAction<boolean>>] = useState(Boolean(false)\r\n  )\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeConfirmPassword = (event) => {\r\n    setConfirmPassword(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeSex = (event) => {\r\n    setSex(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeSchool = (event) => {\r\n    setSchool(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeGrade = (event) => {\r\n    setGrade(event.currentTarget.value)\r\n  }\r\n\r\n  const handleChangeOption = (event) => {\r\n    setOption(event.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (Password !== ConfirmPassword) {\r\n      return alert('비밀번호와 비밀번호 확인이 다릅니다.')\r\n    }\r\n\r\n    const body = {\r\n      email: Email,\r\n      password: Password,\r\n      name: Name,\r\n      sex: Sex,\r\n      school: School,\r\n      grade: Grade,\r\n      option: Option\r\n    }\r\n\r\n    dispatch(registerUser(body)).then(async (response) => {\r\n      if ((await response.payload).registerSuccess) {\r\n        alert('회원가입 성공')\r\n        props.history.push('/login')\r\n      } else {\r\n        alert('이메일이나 비밀번호가 올바르지 않습니다')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleOverlapCheckEmail = (event) => {\r\n    const regEmail = /^([0-9a-zA-Z_.-]+)@([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){1,2}$/\r\n\r\n    event.preventDefault()\r\n\r\n    dispatch(overlapCheckEmail({ email: Email })).then(async (response) => {\r\n      if ((await response.payload).overlapCheckEmail && regEmail.test(Email)) {\r\n        alert('해당 이메일은 사용할 수 있습니다')\r\n        setIsEmailOverlapChecked(true)\r\n      } else {\r\n        alert('해당 이메일은 사용할 수 없습니다')\r\n      }\r\n    })\r\n  }\r\n\r\n  const cancelEmailInput = (event) => {\r\n    event.preventDefault()\r\n\r\n    setIsEmailOverlapChecked(false)\r\n    setEmail('')\r\n  }\r\n\r\n  return (<div>\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"had\">\r\n        <div className=\"go_home\">\r\n          <a href=\"/\">공짱닷컴</a>\r\n        </div>\r\n        <div className=\"join\">회원가입</div>\r\n      </div>\r\n      <div className=\"middle\">\r\n        <div className=\"insert\">기본 정보 입력</div>\r\n      </div>\r\n      <div className=\"main\">\r\n        <div className=\"box\">\r\n          <div className=\"insert_id\">\r\n            <div className=\"from_tit\">이메일 입력</div>\r\n            <div className=\"from_txt\">\r\n              <input type=\"email\" name=\"email\" maxLength={20} title=\"이메일 입력\" placeholder=\"이메일를 입력해 주세요.\" onChange={handleChangeEmail} readOnly={IsEmailOverlapChecked} />\r\n              <button onClick={IsEmailOverlapChecked ? cancelEmailInput : handleOverlapCheckEmail} >{IsEmailOverlapChecked ? '취소' : '중복확인'}</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_password\">\r\n            <div className=\"from_tit\">비밀번호 입력</div>\r\n            <div className=\"from_txt\">\r\n              <input type=\"password\" name=\"password\" maxLength={20} title=\"비밀번호 입력\" placeholder=\"비밀번호를 입력해 주세요.\" onChange={handleChangePassword} />\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_password\">\r\n            <div className=\"from_tit\">비밀번호 확인</div>\r\n            <div className=\"from_txt\">\r\n              <input type=\"password\" name=\"password\" maxLength={20} title=\"비밀번호 확인\" placeholder=\"비밀번호를 입력해 주세요.\" onChange={handleChangeConfirmPassword} />\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_name\">\r\n            <div className=\"from_tit\">이름 입력</div>\r\n            <div className=\"from_txt\">\r\n              <input type=\"text\" name=\"name\" maxLength={5} title=\"이름 입력\" placeholder=\"이름을 입력해 주세요.\" onChange={handleChangeName} />\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_sex\">\r\n            <div className=\"from_tit\">성별 선택</div>\r\n            <div className=\"from_txt\" >\r\n              <input type=\"radio\" name=\"sex\" value=\"남자\" defaultChecked onChange={handleChangeSex} />남자\r\n              <input type=\"radio\" name=\"sex\" value=\"여자\" onChange={handleChangeSex} />여자\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_school\">\r\n            <div className=\"from_tit\">학교 입력</div>\r\n            <div className=\"from_txt\">\r\n              <input type=\"text\" name=\"school\" maxLength={20} title=\"학교 입력\" placeholder=\"학교를 입력해 주세요.\" onChange={handleChangeSchool} />\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_grade\">\r\n            <div className=\"from_tit\">학년 입력</div>\r\n            <div className=\"from_txt\" >\r\n              <input type=\"radio\" name=\"grade\" value=\"1\" defaultChecked onChange={handleChangeGrade} />1\r\n              <input type=\"radio\" name=\"grade\" value=\"2\" onChange={handleChangeGrade} />2\r\n              <input type=\"radio\" name=\"grade\" value=\"3\" onChange={handleChangeGrade} />3\r\n            </div>\r\n          </div>\r\n          <div className=\"insert_option\">\r\n            <div className=\"from_tit\">탐구 선택</div>\r\n            <div className=\"from_txt\" >\r\n              <input type=\"radio\" name=\"option\" value=\"자연\" defaultChecked onChange={handleChangeOption} />자연\r\n              <input type=\"radio\" name=\"option\" value=\"인문\" onChange={handleChangeOption} />인문\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"button\">\r\n          <button onClick={handleSubmit} disabled={!IsEmailOverlapChecked}>회원가입</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(RegisterPage)\r\n","// eslint-disable-next-line no-use-before-define\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { authUser } from '../_actions/user_action'\r\n\r\nexport default function Auth (SpecificComponent, option) {\r\n  function AuthenticationCheck (props: any) {\r\n    const dispatch = useDispatch()\r\n    const [Payload, SetPayload] = useState({ isAuth: false })\r\n\r\n    useEffect(() => {\r\n      dispatch(authUser()).then(async response => {\r\n        SetPayload(await response.payload)\r\n\r\n        if (!Payload.isAuth) {\r\n          if (option) {\r\n            props.history.push('/login')\r\n          }\r\n        } else {\r\n          if (option === false) {\r\n            props.history.push('/')\r\n          }\r\n        }\r\n      })\r\n      return () => {\r\n      }\r\n    }, [])\r\n    return <SpecificComponent payload={Payload}/>\r\n  }\r\n  return AuthenticationCheck\r\n}\r\n","import './Stylesheet.css'\n// eslint-disable-next-line no-use-before-define\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport LandingPage from './LandingPage'\nimport LoginPage from './LoginPage'\nimport RegisterPage from './RegisterPage'\nimport Auth from '../hoc/auth'\n\nfunction App () {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)}/>\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)}/>\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)}/>\n        </Switch>\n      </div>\n      </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { combineReducers } from 'redux'\r\nimport user from './user_reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  user\r\n})\r\n\r\nexport default rootReducer\r\n","import { LOGIN_USER, REGISTER_USER, OVERLAP_CHECK_EMAIL, AUTH_USER, LOGOUT_USER } from '../_actions/types'\r\n\r\nexport default function user (state = {}, action) {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loginSuccess: action.payload }\r\n    case REGISTER_USER:\r\n      return { ...state, registerSuccess: action.payload }\r\n    case OVERLAP_CHECK_EMAIL:\r\n      return { ...state, overlapCheckEmail: action.payload }\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload }\r\n    case LOGOUT_USER:\r\n      return { ...state, logoutSuccess: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './_components/App'\nimport axios from 'axios'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport promiseMiddleware from 'redux-promise'\nimport ReduxThunk from 'redux-thunk'\nimport { applyMiddleware, createStore, compose } from 'redux'\nimport Reducer from './_reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\ndeclare global {\n  // eslint-disable-next-line no-unused-vars\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\naxios.defaults.withCredentials = true\n\nconst store = createStore(Reducer, composeWithDevTools(\n  applyMiddleware(promiseMiddleware, ReduxThunk)\n))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}